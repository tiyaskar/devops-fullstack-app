name: TechVerito-demo

on:
  push:
    branches: 
      - main

jobs:

  build-go-backend:
    permissions:
      id-token: write
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
      with:
          token: ${{ secrets.GIT_TOKEN }}
          
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    
    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker
        install: true

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build
      run: cd ./backend/ && go get ./...

    
    - name: 'Build and push ${{ github.head_ref }} Backend Image'
      if: success()
      uses: docker/build-push-action@v4
      with:
        context: ./backend/
        file: ./backend/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: '${{ secrets.DOCKERHUB_USERNAME }}/techverito_demo_backend:latest'
  
  build-node-frontend:
    permissions:
      id-token: write
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        os: [ubuntu-latest]
        node-version: [14.17.0]
    steps:
    - uses: actions/checkout@v4
      with:
          token: ${{ secrets.GIT_TOKEN }}
          
    - name: 'Cache Node dependencies'
      uses: actions/setup-node@v3
      with:
        node-version: 14
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker
        install: true

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Install ${{ github.event.repository.name }} frontend Requirements
      run: |
        sudo apt-get install libxmlsec1-dev pkg-config
        cd frontend
        npm ci

    - name: 'Build and push ${{ github.head_ref }} Frontend Image'
      if: success()
      uses: docker/build-push-action@v4
      with:
        context: ./frontend/
        file: ./frontend/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: '${{ secrets.DOCKERHUB_USERNAME }}/techverito_demo_frontend:latest'

